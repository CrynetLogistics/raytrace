1  - project init
3  - added vector functionalities
9  - added planes
13 - created interface/abstract class for meshes to handle spheres
14 - meshes now handles planes
15 - fixed invert brightness issues
16 - added shadowing for meshes AND introduced ray class for tracing
18 - implemented multiple bounces for reflectivity and shadows
20 - fixes
23 - fixed artefacts due to epsilon error in Ray.h and Ray.cpp, renders now look great
25 - fixed headers, file inclusions, added test objects, lamp initialisation fixed, 5.9s rendertime
26 - additional rays added, 10.2s rendertime
28 - major improvements to tracing, added reflectivity settings to Meshes, recursive reflections handled, 9.0s rendertime
31 - implementation for dull materials, soft shadows, 9.3s rendertime
33 - introduced an incremental raytracer
34 - TRANSMISSION added, glass materials coming, 11.3s rendertime - but bounces doubled to 4
35 - glass material with refractions added
36 - glass material now includes refraction upon exiting the mesh
37 - specularity fix
39 - added Materials class
42 - separated files to folders
45 - fixing, cleaning, prepping for CUDA implementation, 11.4s rendertime
CrynetLogistics-CUDA upload - 46 - CUDA mostly working
47 - a cuda work in progress
50 - cuda working feature implementation work left
51 - removing recursion from shadow/bounce tracing since with an arbiarily large sample size,
the recursion will be arbitarily deep, will find an iterative alternative
55 - implemented an array to hold all the secondary rays which will be individually processed after the main ray
56 - fully working CUDA raytracer complete with all features
57 - added triangle support





Features:
CUDA renderer, Global illumination, Ray tracing, Spheres, Planes, Tris

Upcoming Features:
Ambient Occlusion Pass, Object Input Parser